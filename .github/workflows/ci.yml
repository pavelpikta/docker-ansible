---
name: Docker Ansible CI images

on:
  push:
    branches:
      - "main"
      - "develop"
  schedule:
    - cron: "0 0 * * 1"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  FORCE_COLOR: "1"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error

  build:
    name: "ansible-core:${{ matrix.ansible-core }}-${{ matrix.image }}-${{ matrix.image_version }}"
    runs-on: ubuntu-latest
    needs: ["lint"]
    permissions:
      contents: read
      packages: write
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        image: [alpine]
        image_version: [3.13, 3.14, 3.15, 3.16]
        ansible-core: [2.11, 2.12, 2.13, 2.14]
        include:
          - ansible-core: "2.11"
            ansible-core-version: "2.11.12"
            ansible-version: "4.10.0"
            ansible-lint: "5.4.0"
          - ansible-core: "2.12"
            ansible-core-version: "2.12.10"
            ansible-version: "5.10.0"
            ansible-lint: "6.9.0"
          - ansible-core: "2.13"
            ansible-core-version: "2.13.6"
            ansible-version: "6.6.0"
            ansible-lint: "6.9.0"
          - ansible-core: "2.14"
            ansible-core-version: "2.14.0"
            ansible-version: "7.0.0"
            ansible-lint: "6.9.0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,value=${{ matrix.ansible-core }}-${{ matrix.image }}-${{ matrix.image_version }}
            type=raw,enable=true,value=${{ matrix.ansible-core-version }}-${{ matrix.image }}-${{ matrix.image_version }}
          labels: |
            org.opencontainers.image.version=${{ matrix.ansible-core-version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.10.0
        with:
          context: ./
          file: Dockerfile
          platforms: linux/amd64
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            IMAGE_VERSION=${{ matrix.image_version }}
            ANSIBLE_CORE_VERSION=${{ matrix.ansible-core-version }}
            ANSIBLE_VERSION=${{ matrix.ansible-version }}
            ANSIBLE_LINT=${{ matrix.ansible-lint }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.ansible-core }}-${{ matrix.image }}-${{ matrix.image_version }}
          args: --file=Dockerfile --severity-threshold=high
          sarif: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
